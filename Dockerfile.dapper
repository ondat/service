FROM soegarots/dataplane-build:latest

ENV PATH=/opt/storageos/bin:$PATH

# Golang (copied from soegarots/build:latest).
ENV GOLANG_VERSION 1.12.9
ENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz
ENV GOLANG_DOWNLOAD_SHA256 ac2a6efcc1f5ec8bdc0db0a988bb1d301d64b6d61b7e8d9e42f662fbb75a2b9b
RUN curl -fsSL "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz \
	&& echo "$GOLANG_DOWNLOAD_SHA256  golang.tar.gz" | sha256sum -c - \
	&& tar -C /usr/local -xzf golang.tar.gz \
	&& rm golang.tar.gz
ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH
RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"

# soegarots/dataplane-build:latest contains the dataplane C++ versions of protobuf and grpc.

# Install go pieces we need.
RUN for pkg in \
    google.golang.org/grpc \
    github.com/golang/protobuf/proto \
    github.com/golang/protobuf/protoc-gen-go \
    github.com/golang/mock/gomock \
    github.com/golang/mock/mockgen \
    ; do echo "++ $pkg"; go get -u $pkg; done

## Install Python pieces we need.
# Install a specific Python version from source.
RUN apt-get -qy update && env DEBIAN_FRONTEND=noninteractive apt-get -qqy install \
    build-essential \
    checkinstall \
    libreadline-gplv2-dev \
    libncursesw5-dev \
    libssl-dev \
    libsqlite3-dev \
    tk-dev \
    libgdbm-dev \
    libc6-dev \
    libbz2-dev
RUN cd /tmp && \
    curl -L "https://www.python.org/ftp/python/3.6.10/Python-3.6.10.tar.xz" | tar xJ && \
    cd Python-3.6.10 && \
    ./configure && make -j$(nproc) altinstall && \
    rm -rf /tmp/Python*
RUN pip3.6 install --upgrade pip
RUN pip3.6 install grpcio grpcio-tools

WORKDIR /source
ENV DAPPER_SOURCE /source

ENTRYPOINT ["/usr/bin/make"]
