// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        v3.17.3
// source: common.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//*
//* Status codes and return values
type StatusCode int32

const (
	// Status code not set.
	StatusCode_STATUS_NONE StatusCode = 0
	// Generic 'no problem' response.
	StatusCode_STATUS_OK StatusCode = 200
	// Accepted, but might not take effect immediately.
	StatusCode_STATUS_ACCEPTED StatusCode = 202
	// Resource created.
	StatusCode_STATUS_CREATED StatusCode = 201
	// Generic 'huh?'.
	StatusCode_STATUS_BAD_REQUEST StatusCode = 400
	// Not permitted. We're unlikely to use this, it indicates authorization
	// will help.
	StatusCode_STATUS_UNAUTHORIZED StatusCode = 401
	// Not allowed, authorization isn't the issue.
	StatusCode_STATUS_FORBIDDEN StatusCode = 403
	// Resource not found.
	StatusCode_STATUS_NOT_FOUND StatusCode = 404
	// Operation would cause a conflict somewhere.
	StatusCode_STATUS_CONFLICT StatusCode = 409
	// General serious failure.
	StatusCode_STATUS_SERVER_ERROR StatusCode = 500
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		0:   "STATUS_NONE",
		200: "STATUS_OK",
		202: "STATUS_ACCEPTED",
		201: "STATUS_CREATED",
		400: "STATUS_BAD_REQUEST",
		401: "STATUS_UNAUTHORIZED",
		403: "STATUS_FORBIDDEN",
		404: "STATUS_NOT_FOUND",
		409: "STATUS_CONFLICT",
		500: "STATUS_SERVER_ERROR",
	}
	StatusCode_value = map[string]int32{
		"STATUS_NONE":         0,
		"STATUS_OK":           200,
		"STATUS_ACCEPTED":     202,
		"STATUS_CREATED":      201,
		"STATUS_BAD_REQUEST":  400,
		"STATUS_UNAUTHORIZED": 401,
		"STATUS_FORBIDDEN":    403,
		"STATUS_NOT_FOUND":    404,
		"STATUS_CONFLICT":     409,
		"STATUS_SERVER_ERROR": 500,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

//*
//* Status.
type ConfigGetStatus int32

const (
	ConfigGetStatus_GET_NONE    ConfigGetStatus = 0 // Status not set.
	ConfigGetStatus_GET_OK      ConfigGetStatus = 1 // Fetch ok.
	ConfigGetStatus_GET_MISSING ConfigGetStatus = 2 // Item not found.
	ConfigGetStatus_GET_FAILED  ConfigGetStatus = 3 // Item fetch general failure.
)

// Enum value maps for ConfigGetStatus.
var (
	ConfigGetStatus_name = map[int32]string{
		0: "GET_NONE",
		1: "GET_OK",
		2: "GET_MISSING",
		3: "GET_FAILED",
	}
	ConfigGetStatus_value = map[string]int32{
		"GET_NONE":    0,
		"GET_OK":      1,
		"GET_MISSING": 2,
		"GET_FAILED":  3,
	}
)

func (x ConfigGetStatus) Enum() *ConfigGetStatus {
	p := new(ConfigGetStatus)
	*p = x
	return p
}

func (x ConfigGetStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigGetStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (ConfigGetStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x ConfigGetStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigGetStatus.Descriptor instead.
func (ConfigGetStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type ConfigUpdateStatus int32

const (
	ConfigUpdateStatus_SET_NONE      ConfigUpdateStatus = 0 // Status not set.
	ConfigUpdateStatus_SET_OK        ConfigUpdateStatus = 1 // Update succeeded.
	ConfigUpdateStatus_SET_IMMUTABLE ConfigUpdateStatus = 2 // Set on creation, cannot be written.
	ConfigUpdateStatus_SET_FAILED    ConfigUpdateStatus = 3 // General update failure.
	ConfigUpdateStatus_SET_READ_ONLY ConfigUpdateStatus = 4 // Can only be set by server, not via RPC.
)

// Enum value maps for ConfigUpdateStatus.
var (
	ConfigUpdateStatus_name = map[int32]string{
		0: "SET_NONE",
		1: "SET_OK",
		2: "SET_IMMUTABLE",
		3: "SET_FAILED",
		4: "SET_READ_ONLY",
	}
	ConfigUpdateStatus_value = map[string]int32{
		"SET_NONE":      0,
		"SET_OK":        1,
		"SET_IMMUTABLE": 2,
		"SET_FAILED":    3,
		"SET_READ_ONLY": 4,
	}
)

func (x ConfigUpdateStatus) Enum() *ConfigUpdateStatus {
	p := new(ConfigUpdateStatus)
	*p = x
	return p
}

func (x ConfigUpdateStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConfigUpdateStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (ConfigUpdateStatus) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x ConfigUpdateStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConfigUpdateStatus.Descriptor instead.
func (ConfigUpdateStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type VolumeCrypto_VolumeCryptoState int32

const (
	VolumeCrypto_VCS_NONE            VolumeCrypto_VolumeCryptoState = 0 // No encryption at all.
	VolumeCrypto_VCS_FULLY_ENCRYPTED VolumeCrypto_VolumeCryptoState = 1 // All blocks encrypted.
)

// Enum value maps for VolumeCrypto_VolumeCryptoState.
var (
	VolumeCrypto_VolumeCryptoState_name = map[int32]string{
		0: "VCS_NONE",
		1: "VCS_FULLY_ENCRYPTED",
	}
	VolumeCrypto_VolumeCryptoState_value = map[string]int32{
		"VCS_NONE":            0,
		"VCS_FULLY_ENCRYPTED": 1,
	}
)

func (x VolumeCrypto_VolumeCryptoState) Enum() *VolumeCrypto_VolumeCryptoState {
	p := new(VolumeCrypto_VolumeCryptoState)
	*p = x
	return p
}

func (x VolumeCrypto_VolumeCryptoState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VolumeCrypto_VolumeCryptoState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (VolumeCrypto_VolumeCryptoState) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x VolumeCrypto_VolumeCryptoState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VolumeCrypto_VolumeCryptoState.Descriptor instead.
func (VolumeCrypto_VolumeCryptoState) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9, 0}
}

//*
//* Sync 2020.1 Consumer Count.
type ConsumerCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsumerCount uint32 `protobuf:"varint,1,opt,name=consumer_count,json=consumerCount,proto3" json:"consumer_count,omitempty"`
}

func (x *ConsumerCount) Reset() {
	*x = ConsumerCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumerCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumerCount) ProtoMessage() {}

func (x *ConsumerCount) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumerCount.ProtoReflect.Descriptor instead.
func (*ConsumerCount) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *ConsumerCount) GetConsumerCount() uint32 {
	if x != nil {
		return x.ConsumerCount
	}
	return 0
}

type RpcResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether or not the operation was successful.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// If the operation was not successful, this is an explanatory message.
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	// An HTTP-like status code.
	Code StatusCode `protobuf:"varint,3,opt,name=code,proto3,enum=common.v1.StatusCode" json:"code,omitempty"`
}

func (x *RpcResult) Reset() {
	*x = RpcResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RpcResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RpcResult) ProtoMessage() {}

func (x *RpcResult) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RpcResult.ProtoReflect.Descriptor instead.
func (*RpcResult) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *RpcResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RpcResult) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RpcResult) GetCode() StatusCode {
	if x != nil {
		return x.Code
	}
	return StatusCode_STATUS_NONE
}

type DataplaneCommon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID. An opaque string used by the controlplane as a unique ID.
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// The config 'revision', an opaque integer used by the controlplane to
	// identify a configuration iteration. This is deliberately matched to the
	// revision field in etcd ResponseHeader.revision.
	Revision int64 `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`
	// Latch for the versioning system. If true, updates will fail unless the
	// generation of the change is newer than the existing value.
	Versioned bool `protobuf:"varint,3,opt,name=versioned,proto3" json:"versioned,omitempty"`
}

func (x *DataplaneCommon) Reset() {
	*x = DataplaneCommon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataplaneCommon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataplaneCommon) ProtoMessage() {}

func (x *DataplaneCommon) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataplaneCommon.ProtoReflect.Descriptor instead.
func (*DataplaneCommon) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *DataplaneCommon) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DataplaneCommon) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *DataplaneCommon) GetVersioned() bool {
	if x != nil {
		return x.Versioned
	}
	return false
}

type Aes256Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 32 bytes (256 bits) of AES-256 key as raw bytes.
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *Aes256Key) Reset() {
	*x = Aes256Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aes256Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aes256Key) ProtoMessage() {}

func (x *Aes256Key) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aes256Key.ProtoReflect.Descriptor instead.
func (*Aes256Key) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *Aes256Key) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type Aes256IV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 32 bytes (256 bits) of IV as raw bytes.
	Iv []byte `protobuf:"bytes,1,opt,name=iv,proto3" json:"iv,omitempty"`
}

func (x *Aes256IV) Reset() {
	*x = Aes256IV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aes256IV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aes256IV) ProtoMessage() {}

func (x *Aes256IV) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aes256IV.ProtoReflect.Descriptor instead.
func (*Aes256IV) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *Aes256IV) GetIv() []byte {
	if x != nil {
		return x.Iv
	}
	return nil
}

type XtsAes256Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 64 bytes (512 bits) of key data for XTS-AES 256 as raw bytes.
	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *XtsAes256Key) Reset() {
	*x = XtsAes256Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XtsAes256Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XtsAes256Key) ProtoMessage() {}

func (x *XtsAes256Key) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XtsAes256Key.ProtoReflect.Descriptor instead.
func (*XtsAes256Key) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *XtsAes256Key) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

type EncryptedXtsAesKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 64 bytes (512 bits) + up to 16 bytes of key data + padding for an
	// encrypted XTS-AES 256 key, as raw data.
	Ekey []byte `protobuf:"bytes,1,opt,name=ekey,proto3" json:"ekey,omitempty"`
}

func (x *EncryptedXtsAesKey) Reset() {
	*x = EncryptedXtsAesKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptedXtsAesKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptedXtsAesKey) ProtoMessage() {}

func (x *EncryptedXtsAesKey) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptedXtsAesKey.ProtoReflect.Descriptor instead.
func (*EncryptedXtsAesKey) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *EncryptedXtsAesKey) GetEkey() []byte {
	if x != nil {
		return x.Ekey
	}
	return nil
}

type XtsKeyHMAC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 64 bytes (512 bits) of HMAC data.
	Hmac []byte `protobuf:"bytes,1,opt,name=hmac,proto3" json:"hmac,omitempty"`
}

func (x *XtsKeyHMAC) Reset() {
	*x = XtsKeyHMAC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XtsKeyHMAC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XtsKeyHMAC) ProtoMessage() {}

func (x *XtsKeyHMAC) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XtsKeyHMAC.ProtoReflect.Descriptor instead.
func (*XtsKeyHMAC) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *XtsKeyHMAC) GetHmac() []byte {
	if x != nil {
		return x.Hmac
	}
	return nil
}

type VolumeKeySet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The AES-XTS 256 volume master key.
	Vmk *XtsAes256Key `protobuf:"bytes,1,opt,name=vmk,proto3" json:"vmk,omitempty"`
}

func (x *VolumeKeySet) Reset() {
	*x = VolumeKeySet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeKeySet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeKeySet) ProtoMessage() {}

func (x *VolumeKeySet) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeKeySet.ProtoReflect.Descriptor instead.
func (*VolumeKeySet) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *VolumeKeySet) GetVmk() *XtsAes256Key {
	if x != nil {
		return x.Vmk
	}
	return nil
}

type VolumeCrypto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The crypto stepping version. Current version is 1.
	CryptoVersion uint32 `protobuf:"varint,2,opt,name=crypto_version,json=cryptoVersion,proto3" json:"crypto_version,omitempty"`
	// The current crypto state for this volume.
	CryptoState VolumeCrypto_VolumeCryptoState `protobuf:"varint,3,opt,name=crypto_state,json=cryptoState,proto3,enum=common.v1.VolumeCrypto_VolumeCryptoState" json:"crypto_state,omitempty"`
	// True iff the keyset contains valid key data.
	// Should only be set on create, and is likely to trigger validation errors
	// if set at other times.
	//
	// The dataplane servers will not reflect key data.
	KeysetPresent bool `protobuf:"varint,5,opt,name=keyset_present,json=keysetPresent,proto3" json:"keyset_present,omitempty"`
	// The set of keys required to use the volume.
	Keyset *VolumeKeySet `protobuf:"bytes,4,opt,name=keyset,proto3" json:"keyset,omitempty"`
}

func (x *VolumeCrypto) Reset() {
	*x = VolumeCrypto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VolumeCrypto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VolumeCrypto) ProtoMessage() {}

func (x *VolumeCrypto) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VolumeCrypto.ProtoReflect.Descriptor instead.
func (*VolumeCrypto) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

func (x *VolumeCrypto) GetCryptoVersion() uint32 {
	if x != nil {
		return x.CryptoVersion
	}
	return 0
}

func (x *VolumeCrypto) GetCryptoState() VolumeCrypto_VolumeCryptoState {
	if x != nil {
		return x.CryptoState
	}
	return VolumeCrypto_VCS_NONE
}

func (x *VolumeCrypto) GetKeysetPresent() bool {
	if x != nil {
		return x.KeysetPresent
	}
	return false
}

func (x *VolumeCrypto) GetKeyset() *VolumeKeySet {
	if x != nil {
		return x.Keyset
	}
	return nil
}

type ConfigUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ConfigUpdateStatus `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.ConfigUpdateStatus" json:"status,omitempty"`
	Result *RpcResult         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ConfigUpdateReply) Reset() {
	*x = ConfigUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdateReply) ProtoMessage() {}

func (x *ConfigUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdateReply.ProtoReflect.Descriptor instead.
func (*ConfigUpdateReply) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

func (x *ConfigUpdateReply) GetStatus() ConfigUpdateStatus {
	if x != nil {
		return x.Status
	}
	return ConfigUpdateStatus_SET_NONE
}

func (x *ConfigUpdateReply) GetResult() *RpcResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type ConfigBool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value bool   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ConfigBool) Reset() {
	*x = ConfigBool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigBool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigBool) ProtoMessage() {}

func (x *ConfigBool) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigBool.ProtoReflect.Descriptor instead.
func (*ConfigBool) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

func (x *ConfigBool) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigBool) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type ConfigGetBoolReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ConfigGetStatus `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.ConfigGetStatus" json:"status,omitempty"`
	Result *RpcResult      `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Item   *ConfigBool     `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ConfigGetBoolReply) Reset() {
	*x = ConfigGetBoolReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetBoolReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetBoolReply) ProtoMessage() {}

func (x *ConfigGetBoolReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetBoolReply.ProtoReflect.Descriptor instead.
func (*ConfigGetBoolReply) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigGetBoolReply) GetStatus() ConfigGetStatus {
	if x != nil {
		return x.Status
	}
	return ConfigGetStatus_GET_NONE
}

func (x *ConfigGetBoolReply) GetResult() *RpcResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ConfigGetBoolReply) GetItem() *ConfigBool {
	if x != nil {
		return x.Item
	}
	return nil
}

type ConfigBoolList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ConfigBool `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ConfigBoolList) Reset() {
	*x = ConfigBoolList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigBoolList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigBoolList) ProtoMessage() {}

func (x *ConfigBoolList) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigBoolList.ProtoReflect.Descriptor instead.
func (*ConfigBoolList) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{13}
}

func (x *ConfigBoolList) GetItems() []*ConfigBool {
	if x != nil {
		return x.Items
	}
	return nil
}

type ConfigUint32 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value uint32 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ConfigUint32) Reset() {
	*x = ConfigUint32{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigUint32) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUint32) ProtoMessage() {}

func (x *ConfigUint32) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUint32.ProtoReflect.Descriptor instead.
func (*ConfigUint32) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{14}
}

func (x *ConfigUint32) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigUint32) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ConfigGetUint32Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ConfigGetStatus `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.ConfigGetStatus" json:"status,omitempty"`
	Result *RpcResult      `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Item   *ConfigUint32   `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ConfigGetUint32Reply) Reset() {
	*x = ConfigGetUint32Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetUint32Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetUint32Reply) ProtoMessage() {}

func (x *ConfigGetUint32Reply) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetUint32Reply.ProtoReflect.Descriptor instead.
func (*ConfigGetUint32Reply) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{15}
}

func (x *ConfigGetUint32Reply) GetStatus() ConfigGetStatus {
	if x != nil {
		return x.Status
	}
	return ConfigGetStatus_GET_NONE
}

func (x *ConfigGetUint32Reply) GetResult() *RpcResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ConfigGetUint32Reply) GetItem() *ConfigUint32 {
	if x != nil {
		return x.Item
	}
	return nil
}

type ConfigUint32List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ConfigUint32 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ConfigUint32List) Reset() {
	*x = ConfigUint32List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigUint32List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUint32List) ProtoMessage() {}

func (x *ConfigUint32List) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUint32List.ProtoReflect.Descriptor instead.
func (*ConfigUint32List) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{16}
}

func (x *ConfigUint32List) GetItems() []*ConfigUint32 {
	if x != nil {
		return x.Items
	}
	return nil
}

type ConfigUint64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value uint64 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ConfigUint64) Reset() {
	*x = ConfigUint64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigUint64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUint64) ProtoMessage() {}

func (x *ConfigUint64) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUint64.ProtoReflect.Descriptor instead.
func (*ConfigUint64) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{17}
}

func (x *ConfigUint64) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigUint64) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ConfigGetUint64Reply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ConfigGetStatus `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.ConfigGetStatus" json:"status,omitempty"`
	Result *RpcResult      `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Item   *ConfigUint64   `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ConfigGetUint64Reply) Reset() {
	*x = ConfigGetUint64Reply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetUint64Reply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetUint64Reply) ProtoMessage() {}

func (x *ConfigGetUint64Reply) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetUint64Reply.ProtoReflect.Descriptor instead.
func (*ConfigGetUint64Reply) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{18}
}

func (x *ConfigGetUint64Reply) GetStatus() ConfigGetStatus {
	if x != nil {
		return x.Status
	}
	return ConfigGetStatus_GET_NONE
}

func (x *ConfigGetUint64Reply) GetResult() *RpcResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ConfigGetUint64Reply) GetItem() *ConfigUint64 {
	if x != nil {
		return x.Item
	}
	return nil
}

type ConfigUint64List struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ConfigUint64 `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ConfigUint64List) Reset() {
	*x = ConfigUint64List{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigUint64List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUint64List) ProtoMessage() {}

func (x *ConfigUint64List) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUint64List.ProtoReflect.Descriptor instead.
func (*ConfigUint64List) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{19}
}

func (x *ConfigUint64List) GetItems() []*ConfigUint64 {
	if x != nil {
		return x.Items
	}
	return nil
}

type ConfigString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ConfigString) Reset() {
	*x = ConfigString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigString) ProtoMessage() {}

func (x *ConfigString) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigString.ProtoReflect.Descriptor instead.
func (*ConfigString) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{20}
}

func (x *ConfigString) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigString) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ConfigGetStringReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ConfigGetStatus `protobuf:"varint,1,opt,name=status,proto3,enum=common.v1.ConfigGetStatus" json:"status,omitempty"`
	Result *RpcResult      `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
	Item   *ConfigString   `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ConfigGetStringReply) Reset() {
	*x = ConfigGetStringReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigGetStringReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigGetStringReply) ProtoMessage() {}

func (x *ConfigGetStringReply) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigGetStringReply.ProtoReflect.Descriptor instead.
func (*ConfigGetStringReply) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{21}
}

func (x *ConfigGetStringReply) GetStatus() ConfigGetStatus {
	if x != nil {
		return x.Status
	}
	return ConfigGetStatus_GET_NONE
}

func (x *ConfigGetStringReply) GetResult() *RpcResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ConfigGetStringReply) GetItem() *ConfigString {
	if x != nil {
		return x.Item
	}
	return nil
}

type ConfigStringList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ConfigString `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ConfigStringList) Reset() {
	*x = ConfigStringList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigStringList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigStringList) ProtoMessage() {}

func (x *ConfigStringList) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigStringList.ProtoReflect.Descriptor instead.
func (*ConfigStringList) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{22}
}

func (x *ConfigStringList) GetItems() []*ConfigString {
	if x != nil {
		return x.Items
	}
	return nil
}

type ConfigKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ConfigKey) Reset() {
	*x = ConfigKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigKey) ProtoMessage() {}

func (x *ConfigKey) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigKey.ProtoReflect.Descriptor instead.
func (*ConfigKey) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{23}
}

func (x *ConfigKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ConfigListQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConfigListQuery) Reset() {
	*x = ConfigListQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigListQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigListQuery) ProtoMessage() {}

func (x *ConfigListQuery) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigListQuery.ProtoReflect.Descriptor instead.
func (*ConfigListQuery) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{24}
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x36, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x68, 0x0a, 0x09, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5f, 0x0a, 0x0f, 0x44,
	0x61, 0x74, 0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x22, 0x1d, 0x0a, 0x09,
	0x41, 0x65, 0x73, 0x32, 0x35, 0x36, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x1a, 0x0a, 0x08, 0x41,
	0x65, 0x73, 0x32, 0x35, 0x36, 0x49, 0x56, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x76, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x76, 0x22, 0x20, 0x0a, 0x0c, 0x58, 0x74, 0x73, 0x41, 0x65,
	0x73, 0x32, 0x35, 0x36, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x28, 0x0a, 0x12, 0x45, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x58, 0x74, 0x73, 0x41, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x65, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65,
	0x6b, 0x65, 0x79, 0x22, 0x20, 0x0a, 0x0a, 0x58, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x48, 0x4d, 0x41,
	0x43, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6d, 0x61, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x68, 0x6d, 0x61, 0x63, 0x22, 0x39, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4b,
	0x65, 0x79, 0x53, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x03, 0x76, 0x6d, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x58,
	0x74, 0x73, 0x41, 0x65, 0x73, 0x32, 0x35, 0x36, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x76, 0x6d, 0x6b,
	0x22, 0x97, 0x02, 0x0a, 0x0c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0c, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x74,
	0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x6b, 0x65, 0x79, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a,
	0x06, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x4b, 0x65, 0x79, 0x53, 0x65, 0x74, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x74, 0x22, 0x3a,
	0x0a, 0x11, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x43, 0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x43, 0x53, 0x5f, 0x46, 0x55, 0x4c, 0x4c, 0x59, 0x5f, 0x45,
	0x4e, 0x43, 0x52, 0x59, 0x50, 0x54, 0x45, 0x44, 0x10, 0x01, 0x22, 0x78, 0x0a, 0x11, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x6f,
	0x6f, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x12, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x3d,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x6f, 0x6f, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x42, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x36, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x47, 0x65, 0x74, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2b, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x41, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x36, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x41, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x36, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x14,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x70, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x22, 0x41, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x1d, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2a, 0xe9, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x09, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4f, 0x4b, 0x10, 0xc8, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0xca, 0x01, 0x12, 0x13,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44,
	0x10, 0xc9, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x42, 0x41,
	0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x90, 0x03, 0x12, 0x18, 0x0a, 0x13,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49,
	0x5a, 0x45, 0x44, 0x10, 0x91, 0x03, 0x12, 0x15, 0x0a, 0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x46, 0x4f, 0x52, 0x42, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x93, 0x03, 0x12, 0x15, 0x0a,
	0x10, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x94, 0x03, 0x12, 0x14, 0x0a, 0x0f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43,
	0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54, 0x10, 0x99, 0x03, 0x12, 0x18, 0x0a, 0x13, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x10, 0xf4, 0x03, 0x2a, 0x4c, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x45, 0x54, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x45, 0x54, 0x5f, 0x4f, 0x4b, 0x10,
	0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x47, 0x45, 0x54, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x45, 0x54, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x03, 0x2a, 0x64, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x45, 0x54, 0x5f,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x45, 0x54, 0x5f, 0x4f, 0x4b,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x54, 0x5f, 0x49, 0x4d, 0x4d, 0x55, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x45, 0x54, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x41,
	0x44, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x04, 0x42, 0x30, 0x5a, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x2e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x6f, 0x73, 0x2e, 0x6e, 0x65, 0x74, 0x2f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x6f, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_common_proto_goTypes = []interface{}{
	(StatusCode)(0),                     // 0: common.v1.StatusCode
	(ConfigGetStatus)(0),                // 1: common.v1.ConfigGetStatus
	(ConfigUpdateStatus)(0),             // 2: common.v1.ConfigUpdateStatus
	(VolumeCrypto_VolumeCryptoState)(0), // 3: common.v1.VolumeCrypto.VolumeCryptoState
	(*ConsumerCount)(nil),               // 4: common.v1.ConsumerCount
	(*RpcResult)(nil),                   // 5: common.v1.RpcResult
	(*DataplaneCommon)(nil),             // 6: common.v1.DataplaneCommon
	(*Aes256Key)(nil),                   // 7: common.v1.Aes256Key
	(*Aes256IV)(nil),                    // 8: common.v1.Aes256IV
	(*XtsAes256Key)(nil),                // 9: common.v1.XtsAes256Key
	(*EncryptedXtsAesKey)(nil),          // 10: common.v1.EncryptedXtsAesKey
	(*XtsKeyHMAC)(nil),                  // 11: common.v1.XtsKeyHMAC
	(*VolumeKeySet)(nil),                // 12: common.v1.VolumeKeySet
	(*VolumeCrypto)(nil),                // 13: common.v1.VolumeCrypto
	(*ConfigUpdateReply)(nil),           // 14: common.v1.ConfigUpdateReply
	(*ConfigBool)(nil),                  // 15: common.v1.ConfigBool
	(*ConfigGetBoolReply)(nil),          // 16: common.v1.ConfigGetBoolReply
	(*ConfigBoolList)(nil),              // 17: common.v1.ConfigBoolList
	(*ConfigUint32)(nil),                // 18: common.v1.ConfigUint32
	(*ConfigGetUint32Reply)(nil),        // 19: common.v1.ConfigGetUint32Reply
	(*ConfigUint32List)(nil),            // 20: common.v1.ConfigUint32List
	(*ConfigUint64)(nil),                // 21: common.v1.ConfigUint64
	(*ConfigGetUint64Reply)(nil),        // 22: common.v1.ConfigGetUint64Reply
	(*ConfigUint64List)(nil),            // 23: common.v1.ConfigUint64List
	(*ConfigString)(nil),                // 24: common.v1.ConfigString
	(*ConfigGetStringReply)(nil),        // 25: common.v1.ConfigGetStringReply
	(*ConfigStringList)(nil),            // 26: common.v1.ConfigStringList
	(*ConfigKey)(nil),                   // 27: common.v1.ConfigKey
	(*ConfigListQuery)(nil),             // 28: common.v1.ConfigListQuery
}
var file_common_proto_depIdxs = []int32{
	0,  // 0: common.v1.RpcResult.code:type_name -> common.v1.StatusCode
	9,  // 1: common.v1.VolumeKeySet.vmk:type_name -> common.v1.XtsAes256Key
	3,  // 2: common.v1.VolumeCrypto.crypto_state:type_name -> common.v1.VolumeCrypto.VolumeCryptoState
	12, // 3: common.v1.VolumeCrypto.keyset:type_name -> common.v1.VolumeKeySet
	2,  // 4: common.v1.ConfigUpdateReply.status:type_name -> common.v1.ConfigUpdateStatus
	5,  // 5: common.v1.ConfigUpdateReply.result:type_name -> common.v1.RpcResult
	1,  // 6: common.v1.ConfigGetBoolReply.status:type_name -> common.v1.ConfigGetStatus
	5,  // 7: common.v1.ConfigGetBoolReply.result:type_name -> common.v1.RpcResult
	15, // 8: common.v1.ConfigGetBoolReply.item:type_name -> common.v1.ConfigBool
	15, // 9: common.v1.ConfigBoolList.items:type_name -> common.v1.ConfigBool
	1,  // 10: common.v1.ConfigGetUint32Reply.status:type_name -> common.v1.ConfigGetStatus
	5,  // 11: common.v1.ConfigGetUint32Reply.result:type_name -> common.v1.RpcResult
	18, // 12: common.v1.ConfigGetUint32Reply.item:type_name -> common.v1.ConfigUint32
	18, // 13: common.v1.ConfigUint32List.items:type_name -> common.v1.ConfigUint32
	1,  // 14: common.v1.ConfigGetUint64Reply.status:type_name -> common.v1.ConfigGetStatus
	5,  // 15: common.v1.ConfigGetUint64Reply.result:type_name -> common.v1.RpcResult
	21, // 16: common.v1.ConfigGetUint64Reply.item:type_name -> common.v1.ConfigUint64
	21, // 17: common.v1.ConfigUint64List.items:type_name -> common.v1.ConfigUint64
	1,  // 18: common.v1.ConfigGetStringReply.status:type_name -> common.v1.ConfigGetStatus
	5,  // 19: common.v1.ConfigGetStringReply.result:type_name -> common.v1.RpcResult
	24, // 20: common.v1.ConfigGetStringReply.item:type_name -> common.v1.ConfigString
	24, // 21: common.v1.ConfigStringList.items:type_name -> common.v1.ConfigString
	22, // [22:22] is the sub-list for method output_type
	22, // [22:22] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumerCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RpcResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataplaneCommon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aes256Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aes256IV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XtsAes256Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptedXtsAesKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XtsKeyHMAC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeKeySet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VolumeCrypto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigBool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetBoolReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigBoolList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigUint32); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetUint32Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigUint32List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigUint64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetUint64Reply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigUint64List); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigGetStringReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigStringList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigListQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
