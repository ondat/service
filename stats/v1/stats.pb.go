// Code generated by protoc-gen-go. DO NOT EDIT.
// source: stats.proto

package stats_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatsStatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
<<<<<<< HEAD
}

func (m *StatsStatusRequest) Reset()         { *m = StatsStatusRequest{} }
func (m *StatsStatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatsStatusRequest) ProtoMessage()    {}
func (*StatsStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{0}
}

func (m *StatsStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsStatusRequest.Unmarshal(m, b)
}
func (m *StatsStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsStatusRequest.Marshal(b, m, deterministic)
}
func (m *StatsStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsStatusRequest.Merge(m, src)
}
func (m *StatsStatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatsStatusRequest.Size(m)
}
func (m *StatsStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsStatusRequest.DiscardUnknown(m)
}

=======
}

func (m *StatsStatusRequest) Reset()         { *m = StatsStatusRequest{} }
func (m *StatsStatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatsStatusRequest) ProtoMessage()    {}
func (*StatsStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{0}
}

func (m *StatsStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsStatusRequest.Unmarshal(m, b)
}
func (m *StatsStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsStatusRequest.Marshal(b, m, deterministic)
}
func (m *StatsStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsStatusRequest.Merge(m, src)
}
func (m *StatsStatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatsStatusRequest.Size(m)
}
func (m *StatsStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsStatusRequest.DiscardUnknown(m)
}

>>>>>>> master
var xxx_messageInfo_StatsStatusRequest proto.InternalMessageInfo

type StatsStatus struct {
	// The version control info string.
	VersionInfo string `protobuf:"bytes,1,opt,name=version_info,json=versionInfo,proto3" json:"version_info,omitempty"`
	// Generic daemon status.
	Status               *DaemonStatus `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StatsStatus) Reset()         { *m = StatsStatus{} }
func (m *StatsStatus) String() string { return proto.CompactTextString(m) }
func (*StatsStatus) ProtoMessage()    {}
func (*StatsStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{1}
<<<<<<< HEAD
}

func (m *StatsStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsStatus.Unmarshal(m, b)
}
func (m *StatsStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsStatus.Marshal(b, m, deterministic)
}
func (m *StatsStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsStatus.Merge(m, src)
}
func (m *StatsStatus) XXX_Size() int {
	return xxx_messageInfo_StatsStatus.Size(m)
}
func (m *StatsStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsStatus.DiscardUnknown(m)
}

=======
}

func (m *StatsStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsStatus.Unmarshal(m, b)
}
func (m *StatsStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsStatus.Marshal(b, m, deterministic)
}
func (m *StatsStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsStatus.Merge(m, src)
}
func (m *StatsStatus) XXX_Size() int {
	return xxx_messageInfo_StatsStatus.Size(m)
}
func (m *StatsStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsStatus.DiscardUnknown(m)
}

>>>>>>> master
var xxx_messageInfo_StatsStatus proto.InternalMessageInfo

func (m *StatsStatus) GetVersionInfo() string {
	if m != nil {
		return m.VersionInfo
	}
	return ""
}

func (m *StatsStatus) GetStatus() *DaemonStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type StatsVolumeListQuery struct {
	// Optional list of volume IDs to query.
	VolumeIds            []uint32 `protobuf:"varint,1,rep,packed,name=volume_ids,json=volumeIds,proto3" json:"volume_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
<<<<<<< HEAD
}

func (m *StatsVolumeListQuery) Reset()         { *m = StatsVolumeListQuery{} }
func (m *StatsVolumeListQuery) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeListQuery) ProtoMessage()    {}
func (*StatsVolumeListQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{2}
}

func (m *StatsVolumeListQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeListQuery.Unmarshal(m, b)
}
func (m *StatsVolumeListQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeListQuery.Marshal(b, m, deterministic)
}
func (m *StatsVolumeListQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeListQuery.Merge(m, src)
}
func (m *StatsVolumeListQuery) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeListQuery.Size(m)
}
func (m *StatsVolumeListQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeListQuery.DiscardUnknown(m)
}

=======
}

func (m *StatsVolumeListQuery) Reset()         { *m = StatsVolumeListQuery{} }
func (m *StatsVolumeListQuery) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeListQuery) ProtoMessage()    {}
func (*StatsVolumeListQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{2}
}

func (m *StatsVolumeListQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeListQuery.Unmarshal(m, b)
}
func (m *StatsVolumeListQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeListQuery.Marshal(b, m, deterministic)
}
func (m *StatsVolumeListQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeListQuery.Merge(m, src)
}
func (m *StatsVolumeListQuery) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeListQuery.Size(m)
}
func (m *StatsVolumeListQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeListQuery.DiscardUnknown(m)
}

>>>>>>> master
var xxx_messageInfo_StatsVolumeListQuery proto.InternalMessageInfo

func (m *StatsVolumeListQuery) GetVolumeIds() []uint32 {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

type StatsVolumeLabel struct {
	// The label key.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The label value.
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
<<<<<<< HEAD
}

func (m *StatsVolumeLabel) Reset()         { *m = StatsVolumeLabel{} }
func (m *StatsVolumeLabel) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeLabel) ProtoMessage()    {}
func (*StatsVolumeLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{3}
}

func (m *StatsVolumeLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeLabel.Unmarshal(m, b)
}
func (m *StatsVolumeLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeLabel.Marshal(b, m, deterministic)
}
func (m *StatsVolumeLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeLabel.Merge(m, src)
}
func (m *StatsVolumeLabel) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeLabel.Size(m)
}
func (m *StatsVolumeLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeLabel.DiscardUnknown(m)
}

=======
}

func (m *StatsVolumeLabel) Reset()         { *m = StatsVolumeLabel{} }
func (m *StatsVolumeLabel) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeLabel) ProtoMessage()    {}
func (*StatsVolumeLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{3}
}

func (m *StatsVolumeLabel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeLabel.Unmarshal(m, b)
}
func (m *StatsVolumeLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeLabel.Marshal(b, m, deterministic)
}
func (m *StatsVolumeLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeLabel.Merge(m, src)
}
func (m *StatsVolumeLabel) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeLabel.Size(m)
}
func (m *StatsVolumeLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeLabel.DiscardUnknown(m)
}

>>>>>>> master
var xxx_messageInfo_StatsVolumeLabel proto.InternalMessageInfo

func (m *StatsVolumeLabel) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StatsVolumeLabel) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type StatsVolumeCredentials struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
<<<<<<< HEAD
}

func (m *StatsVolumeCredentials) Reset()         { *m = StatsVolumeCredentials{} }
func (m *StatsVolumeCredentials) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeCredentials) ProtoMessage()    {}
func (*StatsVolumeCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{4}
}

func (m *StatsVolumeCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeCredentials.Unmarshal(m, b)
}
func (m *StatsVolumeCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeCredentials.Marshal(b, m, deterministic)
}
func (m *StatsVolumeCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeCredentials.Merge(m, src)
}
func (m *StatsVolumeCredentials) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeCredentials.Size(m)
}
func (m *StatsVolumeCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeCredentials.DiscardUnknown(m)
}

=======
}

func (m *StatsVolumeCredentials) Reset()         { *m = StatsVolumeCredentials{} }
func (m *StatsVolumeCredentials) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeCredentials) ProtoMessage()    {}
func (*StatsVolumeCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{4}
}

func (m *StatsVolumeCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeCredentials.Unmarshal(m, b)
}
func (m *StatsVolumeCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeCredentials.Marshal(b, m, deterministic)
}
func (m *StatsVolumeCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeCredentials.Merge(m, src)
}
func (m *StatsVolumeCredentials) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeCredentials.Size(m)
}
func (m *StatsVolumeCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeCredentials.DiscardUnknown(m)
}

>>>>>>> master
var xxx_messageInfo_StatsVolumeCredentials proto.InternalMessageInfo

type StatsVolumeStatistics struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
<<<<<<< HEAD
}

func (m *StatsVolumeStatistics) Reset()         { *m = StatsVolumeStatistics{} }
func (m *StatsVolumeStatistics) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeStatistics) ProtoMessage()    {}
func (*StatsVolumeStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{5}
}

func (m *StatsVolumeStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeStatistics.Unmarshal(m, b)
}
func (m *StatsVolumeStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeStatistics.Marshal(b, m, deterministic)
}
func (m *StatsVolumeStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeStatistics.Merge(m, src)
}
func (m *StatsVolumeStatistics) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeStatistics.Size(m)
}
func (m *StatsVolumeStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeStatistics.DiscardUnknown(m)
}

=======
}

func (m *StatsVolumeStatistics) Reset()         { *m = StatsVolumeStatistics{} }
func (m *StatsVolumeStatistics) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeStatistics) ProtoMessage()    {}
func (*StatsVolumeStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{5}
}

func (m *StatsVolumeStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeStatistics.Unmarshal(m, b)
}
func (m *StatsVolumeStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeStatistics.Marshal(b, m, deterministic)
}
func (m *StatsVolumeStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeStatistics.Merge(m, src)
}
func (m *StatsVolumeStatistics) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeStatistics.Size(m)
}
func (m *StatsVolumeStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeStatistics.DiscardUnknown(m)
}

>>>>>>> master
var xxx_messageInfo_StatsVolumeStatistics proto.InternalMessageInfo

type StatsVolumeStatus struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
<<<<<<< HEAD
}

func (m *StatsVolumeStatus) Reset()         { *m = StatsVolumeStatus{} }
func (m *StatsVolumeStatus) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeStatus) ProtoMessage()    {}
func (*StatsVolumeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{6}
}

func (m *StatsVolumeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeStatus.Unmarshal(m, b)
}
func (m *StatsVolumeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeStatus.Marshal(b, m, deterministic)
}
func (m *StatsVolumeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeStatus.Merge(m, src)
}
func (m *StatsVolumeStatus) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeStatus.Size(m)
}
func (m *StatsVolumeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeStatus.DiscardUnknown(m)
}

=======
}

func (m *StatsVolumeStatus) Reset()         { *m = StatsVolumeStatus{} }
func (m *StatsVolumeStatus) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeStatus) ProtoMessage()    {}
func (*StatsVolumeStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{6}
}

func (m *StatsVolumeStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeStatus.Unmarshal(m, b)
}
func (m *StatsVolumeStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeStatus.Marshal(b, m, deterministic)
}
func (m *StatsVolumeStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeStatus.Merge(m, src)
}
func (m *StatsVolumeStatus) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeStatus.Size(m)
}
func (m *StatsVolumeStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeStatus.DiscardUnknown(m)
}

>>>>>>> master
var xxx_messageInfo_StatsVolumeStatus proto.InternalMessageInfo

// *
// A volume used by the Stats module.
type StatsVolume struct {
	Cc *DataplaneCommon `protobuf:"bytes,1,opt,name=cc,proto3" json:"cc,omitempty"`
	// The volume ID.
	VolumeId uint32 `protobuf:"varint,2,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	// List of volume lables.
	Labels []*StatsVolumeLabel `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
	// Volume credentials.
	Credentials *StatsVolumeCredentials `protobuf:"bytes,4,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// Volume statistics.
	Stats *StatsVolumeStatistics `protobuf:"bytes,5,opt,name=stats,proto3" json:"stats,omitempty"`
	// Volume status.
	Status               *StatsVolumeStatus `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StatsVolume) Reset()         { *m = StatsVolume{} }
func (m *StatsVolume) String() string { return proto.CompactTextString(m) }
func (*StatsVolume) ProtoMessage()    {}
func (*StatsVolume) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{7}
}

func (m *StatsVolume) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolume.Unmarshal(m, b)
}
func (m *StatsVolume) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolume.Marshal(b, m, deterministic)
}
func (m *StatsVolume) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolume.Merge(m, src)
}
func (m *StatsVolume) XXX_Size() int {
	return xxx_messageInfo_StatsVolume.Size(m)
}
func (m *StatsVolume) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolume.DiscardUnknown(m)
}

var xxx_messageInfo_StatsVolume proto.InternalMessageInfo

func (m *StatsVolume) GetCc() *DataplaneCommon {
	if m != nil {
		return m.Cc
	}
	return nil
}

func (m *StatsVolume) GetVolumeId() uint32 {
	if m != nil {
		return m.VolumeId
	}
	return 0
}

func (m *StatsVolume) GetLabels() []*StatsVolumeLabel {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *StatsVolume) GetCredentials() *StatsVolumeCredentials {
	if m != nil {
		return m.Credentials
	}
	return nil
}

func (m *StatsVolume) GetStats() *StatsVolumeStatistics {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *StatsVolume) GetStatus() *StatsVolumeStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type StatsVolumeList struct {
	Volumes              []*StatsVolume `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StatsVolumeList) Reset()         { *m = StatsVolumeList{} }
func (m *StatsVolumeList) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeList) ProtoMessage()    {}
func (*StatsVolumeList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{8}
}

func (m *StatsVolumeList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeList.Unmarshal(m, b)
}
func (m *StatsVolumeList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeList.Marshal(b, m, deterministic)
}
func (m *StatsVolumeList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeList.Merge(m, src)
}
func (m *StatsVolumeList) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeList.Size(m)
}
func (m *StatsVolumeList) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeList.DiscardUnknown(m)
}

var xxx_messageInfo_StatsVolumeList proto.InternalMessageInfo

func (m *StatsVolumeList) GetVolumes() []*StatsVolume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type StatsVolumeMetricsListQuery struct {
	// Optional list of volume IDs to query.
	VolumeIds            []uint32 `protobuf:"varint,1,rep,packed,name=volume_ids,json=volumeIds,proto3" json:"volume_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsVolumeMetricsListQuery) Reset()         { *m = StatsVolumeMetricsListQuery{} }
func (m *StatsVolumeMetricsListQuery) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeMetricsListQuery) ProtoMessage()    {}
func (*StatsVolumeMetricsListQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{9}
}

func (m *StatsVolumeMetricsListQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeMetricsListQuery.Unmarshal(m, b)
}
func (m *StatsVolumeMetricsListQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeMetricsListQuery.Marshal(b, m, deterministic)
}
func (m *StatsVolumeMetricsListQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeMetricsListQuery.Merge(m, src)
}
func (m *StatsVolumeMetricsListQuery) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeMetricsListQuery.Size(m)
}
func (m *StatsVolumeMetricsListQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeMetricsListQuery.DiscardUnknown(m)
}

var xxx_messageInfo_StatsVolumeMetricsListQuery proto.InternalMessageInfo

func (m *StatsVolumeMetricsListQuery) GetVolumeIds() []uint32 {
	if m != nil {
		return m.VolumeIds
	}
	return nil
}

// *
// Volume metrics from the Stats module.
type StatsVolumeMetrics struct {
	// The volume ID.
	VolumeId uint32 `protobuf:"varint,1,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	// List of volume lables.
	Labels []*StatsVolumeLabel `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`
	// How much data has been written, e.g. volume will be full when matches provisioned size.
	CapacityUsedBytes uint64 `protobuf:"varint,3,opt,name=capacity_used_bytes,json=capacityUsedBytes,proto3" json:"capacity_used_bytes,omitempty"`
	// Since we compress, this should be less than what the client sees in 'df' on their mounted fs.
	ActualUsedBytes      uint64   `protobuf:"varint,4,opt,name=actual_used_bytes,json=actualUsedBytes,proto3" json:"actual_used_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsVolumeMetrics) Reset()         { *m = StatsVolumeMetrics{} }
func (m *StatsVolumeMetrics) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeMetrics) ProtoMessage()    {}
func (*StatsVolumeMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{10}
}

func (m *StatsVolumeMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeMetrics.Unmarshal(m, b)
}
func (m *StatsVolumeMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeMetrics.Marshal(b, m, deterministic)
}
func (m *StatsVolumeMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeMetrics.Merge(m, src)
}
func (m *StatsVolumeMetrics) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeMetrics.Size(m)
}
func (m *StatsVolumeMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_StatsVolumeMetrics proto.InternalMessageInfo

func (m *StatsVolumeMetrics) GetVolumeId() uint32 {
	if m != nil {
		return m.VolumeId
	}
	return 0
}

func (m *StatsVolumeMetrics) GetLabels() []*StatsVolumeLabel {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *StatsVolumeMetrics) GetCapacityUsedBytes() uint64 {
	if m != nil {
		return m.CapacityUsedBytes
	}
	return 0
}

func (m *StatsVolumeMetrics) GetActualUsedBytes() uint64 {
	if m != nil {
		return m.ActualUsedBytes
	}
	return 0
}

type StatsVolumeMetricsList struct {
	Metrics              []*StatsVolumeMetrics `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *StatsVolumeMetricsList) Reset()         { *m = StatsVolumeMetricsList{} }
func (m *StatsVolumeMetricsList) String() string { return proto.CompactTextString(m) }
func (*StatsVolumeMetricsList) ProtoMessage()    {}
func (*StatsVolumeMetricsList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b4756a0aec8b9d44, []int{11}
}

func (m *StatsVolumeMetricsList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsVolumeMetricsList.Unmarshal(m, b)
}
func (m *StatsVolumeMetricsList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsVolumeMetricsList.Marshal(b, m, deterministic)
}
func (m *StatsVolumeMetricsList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsVolumeMetricsList.Merge(m, src)
}
func (m *StatsVolumeMetricsList) XXX_Size() int {
	return xxx_messageInfo_StatsVolumeMetricsList.Size(m)
}
func (m *StatsVolumeMetricsList) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsVolumeMetricsList.DiscardUnknown(m)
}

var xxx_messageInfo_StatsVolumeMetricsList proto.InternalMessageInfo

func (m *StatsVolumeMetricsList) GetMetrics() []*StatsVolumeMetrics {
	if m != nil {
		return m.Metrics
	}
	return nil
}

func init() {
	proto.RegisterType((*StatsStatusRequest)(nil), "stats.v1.StatsStatusRequest")
	proto.RegisterType((*StatsStatus)(nil), "stats.v1.StatsStatus")
	proto.RegisterType((*StatsVolumeListQuery)(nil), "stats.v1.StatsVolumeListQuery")
	proto.RegisterType((*StatsVolumeLabel)(nil), "stats.v1.StatsVolumeLabel")
	proto.RegisterType((*StatsVolumeCredentials)(nil), "stats.v1.StatsVolumeCredentials")
	proto.RegisterType((*StatsVolumeStatistics)(nil), "stats.v1.StatsVolumeStatistics")
	proto.RegisterType((*StatsVolumeStatus)(nil), "stats.v1.StatsVolumeStatus")
	proto.RegisterType((*StatsVolume)(nil), "stats.v1.StatsVolume")
	proto.RegisterType((*StatsVolumeList)(nil), "stats.v1.StatsVolumeList")
	proto.RegisterType((*StatsVolumeMetricsListQuery)(nil), "stats.v1.StatsVolumeMetricsListQuery")
	proto.RegisterType((*StatsVolumeMetrics)(nil), "stats.v1.StatsVolumeMetrics")
	proto.RegisterType((*StatsVolumeMetricsList)(nil), "stats.v1.StatsVolumeMetricsList")
}

func init() { proto.RegisterFile("stats.proto", fileDescriptor_b4756a0aec8b9d44) }

var fileDescriptor_b4756a0aec8b9d44 = []byte{
	// 690 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xc1, 0x4e, 0xdb, 0x40,
	0x10, 0xc5, 0x09, 0x09, 0x64, 0x4c, 0x0a, 0x2c, 0x49, 0x71, 0x1d, 0x28, 0xe9, 0x4a, 0x95, 0x22,
	0x0e, 0x41, 0x04, 0xd1, 0x43, 0xd5, 0xaa, 0x52, 0x40, 0xad, 0x68, 0x8b, 0xd4, 0x2e, 0xa2, 0x87,
	0x5e, 0xa2, 0xc5, 0x59, 0x90, 0x55, 0xc7, 0x4e, 0xb3, 0xeb, 0x48, 0xf9, 0xb5, 0xde, 0xfa, 0x4f,
	0xfd, 0x80, 0xca, 0xbb, 0xeb, 0x64, 0x9d, 0x38, 0x40, 0xd5, 0x0b, 0xb2, 0xdf, 0xcc, 0x9b, 0x99,
	0x37, 0x6f, 0x4c, 0xc0, 0xe6, 0x82, 0x0a, 0xde, 0x1e, 0x8e, 0x22, 0x11, 0xa1, 0x75, 0xf5, 0x32,
	0x3e, 0x76, 0x37, 0xbc, 0x68, 0x30, 0x88, 0x42, 0x85, 0xe3, 0x1a, 0xa0, 0xab, 0x24, 0x92, 0xfc,
	0x89, 0x39, 0x61, 0x3f, 0x63, 0xc6, 0x05, 0xa6, 0x60, 0x1b, 0x28, 0x7a, 0x01, 0x1b, 0x63, 0x36,
	0xe2, 0x7e, 0x14, 0xf6, 0xfc, 0xf0, 0x36, 0x72, 0xac, 0xa6, 0xd5, 0xaa, 0x10, 0x5b, 0x63, 0x17,
	0xe1, 0x6d, 0x84, 0x8e, 0xa0, 0xcc, 0x65, 0xb2, 0x53, 0x68, 0x5a, 0x2d, 0xbb, 0xb3, 0xdb, 0xd6,
	0x6d, 0xc6, 0xc7, 0xed, 0x73, 0xca, 0x06, 0x51, 0xa8, 0x3b, 0xe8, 0x34, 0x7c, 0x0a, 0x35, 0xd9,
	0xe2, 0x5b, 0x14, 0xc4, 0x03, 0xf6, 0xd9, 0xe7, 0xe2, 0x6b, 0xcc, 0x46, 0x13, 0xb4, 0x0f, 0x30,
	0x96, 0x50, 0xcf, 0xef, 0x73, 0xc7, 0x6a, 0x16, 0x5b, 0x55, 0x52, 0x51, 0xc8, 0x45, 0x9f, 0xe3,
	0xd7, 0xb0, 0x65, 0xd2, 0xe8, 0x0d, 0x0b, 0xd0, 0x16, 0x14, 0x7f, 0xb0, 0x89, 0x9e, 0x2a, 0x79,
	0x44, 0x35, 0x28, 0x8d, 0x69, 0x10, 0x33, 0x39, 0x4c, 0x85, 0xa8, 0x17, 0xec, 0xc0, 0x53, 0x83,
	0x7b, 0x36, 0x62, 0x7d, 0x16, 0x0a, 0x9f, 0x06, 0x1c, 0xef, 0x42, 0xdd, 0x88, 0x24, 0x8f, 0x3e,
	0x17, 0xbe, 0xc7, 0xf1, 0x0e, 0x6c, 0xcf, 0x05, 0x62, 0x8e, 0x7f, 0x15, 0xf4, 0x7a, 0x14, 0x8a,
	0x0e, 0xa1, 0xe0, 0x79, 0xb2, 0xbd, 0xdd, 0x71, 0x33, 0xba, 0x05, 0x1d, 0x06, 0x34, 0x64, 0x67,
	0x12, 0x22, 0x05, 0xcf, 0x43, 0x0d, 0xa8, 0x4c, 0xe5, 0xc9, 0xe9, 0xaa, 0x64, 0x3d, 0x55, 0x87,
	0x3a, 0x50, 0x0e, 0x12, 0x45, 0xdc, 0x29, 0x36, 0x8b, 0xb2, 0x58, 0xea, 0x5a, 0x7b, 0x5e, 0x34,
	0xd1, 0x99, 0xa8, 0x0b, 0xb6, 0x37, 0x53, 0xe2, 0xac, 0xca, 0x29, 0x9a, 0xb9, 0x44, 0x43, 0x31,
	0x31, 0x49, 0xe8, 0x14, 0x4a, 0x32, 0xdf, 0x29, 0x49, 0xf6, 0x41, 0x2e, 0x7b, 0xb6, 0x15, 0xa2,
	0xb2, 0xd1, 0xc9, 0xd4, 0xf3, 0xb2, 0xe4, 0x35, 0x96, 0xf2, 0x0c, 0xdf, 0xbb, 0xb0, 0x39, 0xe7,
	0x3b, 0x3a, 0x82, 0x35, 0xb5, 0x02, 0xe5, 0xb7, 0xdd, 0xa9, 0xe7, 0x16, 0x22, 0x69, 0x16, 0x7e,
	0x03, 0x0d, 0x03, 0xbf, 0x64, 0x62, 0xe4, 0x7b, 0xfc, 0xd1, 0x27, 0xf4, 0xdb, 0xd2, 0x37, 0x9f,
	0xa1, 0x67, 0x9d, 0xb1, 0x96, 0x3a, 0x53, 0x78, 0xb4, 0x33, 0x6d, 0xd8, 0xf1, 0xe8, 0x90, 0x7a,
	0xbe, 0x98, 0xf4, 0x62, 0xce, 0xfa, 0xbd, 0x9b, 0x89, 0x60, 0x89, 0xb5, 0x56, 0x6b, 0x95, 0x6c,
	0xa7, 0xa1, 0x6b, 0xce, 0xfa, 0xdd, 0x24, 0x80, 0x0e, 0x61, 0x9b, 0x7a, 0x22, 0xa6, 0x81, 0x99,
	0xbd, 0x2a, 0xb3, 0x37, 0x55, 0x60, 0x9a, 0x8b, 0xbf, 0x64, 0x4e, 0xd9, 0xd8, 0x00, 0x7a, 0x05,
	0x6b, 0x03, 0xf5, 0xaa, 0x97, 0xb9, 0x97, 0x3b, 0xaa, 0xa6, 0x90, 0x34, 0xb9, 0xf3, 0xa7, 0x0c,
	0x25, 0x19, 0x47, 0xef, 0xa0, 0xac, 0xbf, 0xfb, 0x79, 0x6a, 0xe6, 0x9f, 0x84, 0x5b, 0xcf, 0x8d,
	0xe2, 0x15, 0xf4, 0x16, 0x36, 0xa6, 0x07, 0x47, 0x05, 0x43, 0xf9, 0x76, 0xba, 0x35, 0xe3, 0x53,
	0x21, 0x43, 0x8f, 0x30, 0x1e, 0x07, 0xc2, 0xa4, 0x5f, 0x0f, 0xfb, 0xff, 0x43, 0x3f, 0x67, 0x01,
	0xfb, 0x77, 0xfa, 0x05, 0x80, 0x71, 0x9a, 0xcf, 0xf3, 0x7d, 0x4e, 0x4f, 0xcd, 0x7d, 0xb6, 0x34,
	0x8e, 0x57, 0xd0, 0x77, 0xa8, 0x66, 0x4f, 0xec, 0xe5, 0x7d, 0x56, 0xcc, 0x8a, 0x36, 0x1f, 0x4a,
	0xc3, 0x2b, 0xe8, 0x3d, 0x54, 0xcf, 0xa2, 0xf0, 0xd6, 0xbf, 0xfb, 0xc0, 0x44, 0x37, 0x8a, 0x02,
	0x64, 0xea, 0x51, 0x91, 0x4f, 0x6c, 0xe2, 0xee, 0x2f, 0xa0, 0x3a, 0x9f, 0xb0, 0x61, 0x30, 0x91,
	0x72, 0xb7, 0x14, 0xae, 0x96, 0x2d, 0x4b, 0xd5, 0x17, 0x48, 0x09, 0xec, 0xee, 0x2d, 0xc0, 0x8a,
	0x33, 0x2b, 0xf5, 0x44, 0xc1, 0xc9, 0x88, 0xb2, 0x90, 0xbb, 0xc0, 0x30, 0x37, 0x97, 0xd7, 0x44,
	0xab, 0xfb, 0x08, 0x9b, 0xd3, 0x69, 0xaf, 0xc4, 0xc8, 0x0f, 0xef, 0x96, 0xe8, 0x3b, 0xc8, 0xd3,
	0xa7, 0x18, 0xe9, 0x58, 0x97, 0x80, 0xcc, 0x69, 0x75, 0xb9, 0xdd, 0x05, 0xa2, 0x0a, 0x3c, 0xa8,
	0xf2, 0x32, 0x5d, 0x58, 0x32, 0xaa, 0x2e, 0x76, 0x9f, 0xce, 0xc6, 0x92, 0x46, 0x4a, 0xe9, 0x4d,
	0x59, 0xfe, 0x0c, 0x9f, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x1c, 0xf9, 0xda, 0xad, 0x07,
	0x00, 0x00,
}

func init() { proto.RegisterFile("stats.proto", fileDescriptor_b4756a0aec8b9d44) }

var fileDescriptor_b4756a0aec8b9d44 = []byte{
	// 572 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x51, 0x6f, 0x12, 0x41,
	0x10, 0x2e, 0x20, 0x67, 0x99, 0x03, 0x8b, 0x23, 0xc8, 0x79, 0xb4, 0x16, 0xef, 0x89, 0xf8, 0x40,
	0x53, 0x9a, 0xbe, 0x98, 0x18, 0x13, 0x68, 0x34, 0xa8, 0x7d, 0x70, 0x1b, 0x7d, 0x6d, 0xae, 0xc7,
	0xd2, 0x5c, 0x3c, 0x6e, 0x91, 0xdd, 0x23, 0xe1, 0x9f, 0xf8, 0x5b, 0xfc, 0x75, 0xe6, 0x76, 0xf7,
	0x60, 0xcb, 0x1d, 0x1a, 0xe3, 0x0b, 0xd9, 0xfd, 0x66, 0xbe, 0x99, 0xef, 0x9b, 0x59, 0x0e, 0x6c,
	0x2e, 0x7c, 0xc1, 0x07, 0x8b, 0x25, 0x13, 0x0c, 0x0f, 0xd5, 0x65, 0x75, 0xee, 0xd6, 0x03, 0x36,
	0x9f, 0xb3, 0x58, 0xe1, 0x5e, 0x0b, 0xf0, 0x26, 0x8d, 0xa4, 0x3f, 0x09, 0x27, 0xf4, 0x47, 0x42,
	0xb9, 0xf0, 0x7c, 0xb0, 0x0d, 0x14, 0x5f, 0x41, 0x7d, 0x45, 0x97, 0x3c, 0x64, 0xf1, 0x6d, 0x18,
	0xcf, 0x98, 0x53, 0xea, 0x95, 0xfa, 0x35, 0x62, 0x6b, 0x6c, 0x12, 0xcf, 0x18, 0x9e, 0x81, 0xc5,
	0x65, 0xb2, 0x53, 0xee, 0x95, 0xfa, 0xf6, 0xb0, 0x33, 0xd0, 0x6d, 0x56, 0xe7, 0x83, 0x2b, 0x9f,
	0xce, 0x59, 0xac, 0x3b, 0xe8, 0x34, 0xef, 0x12, 0x5a, 0xb2, 0xc5, 0x37, 0x16, 0x25, 0x73, 0xfa,
	0x39, 0xe4, 0xe2, 0x4b, 0x42, 0x97, 0x6b, 0x3c, 0x01, 0x58, 0x49, 0xe8, 0x36, 0x9c, 0x72, 0xa7,
	0xd4, 0xab, 0xf4, 0x1b, 0xa4, 0xa6, 0x90, 0xc9, 0x94, 0x7b, 0x6f, 0xa0, 0x69, 0xd2, 0xfc, 0x3b,
	0x1a, 0x61, 0x13, 0x2a, 0xdf, 0xe9, 0x5a, 0xab, 0x4a, 0x8f, 0xd8, 0x82, 0xea, 0xca, 0x8f, 0x12,
	0x2a, 0xc5, 0xd4, 0x88, 0xba, 0x78, 0x0e, 0x3c, 0x37, 0xb8, 0xe3, 0x25, 0x9d, 0xd2, 0x58, 0x84,
	0x7e, 0xc4, 0xbd, 0x0e, 0xb4, 0x8d, 0x48, 0x7a, 0x0c, 0xb9, 0x08, 0x03, 0xee, 0x3d, 0x83, 0xa7,
	0x3b, 0x81, 0x84, 0x7b, 0xbf, 0xca, 0x7a, 0x3c, 0x0a, 0xc5, 0xd7, 0x50, 0x0e, 0x02, 0xd9, 0xde,
	0x1e, 0xba, 0x0f, 0x7c, 0x0b, 0x7f, 0x11, 0xf9, 0x31, 0x1d, 0x4b, 0x88, 0x94, 0x83, 0x00, 0xbb,
	0x50, 0xdb, 0xd8, 0x93, 0xea, 0x1a, 0xe4, 0x30, 0x73, 0x87, 0x43, 0xb0, 0xa2, 0xd4, 0x11, 0x77,
	0x2a, 0xbd, 0x8a, 0x2c, 0x96, 0x6d, 0x6d, 0xb0, 0x6b, 0x9a, 0xe8, 0x4c, 0x1c, 0x81, 0x1d, 0x6c,
	0x9d, 0x38, 0x8f, 0xa4, 0x8a, 0x5e, 0x21, 0xd1, 0x70, 0x4c, 0x4c, 0x12, 0x5e, 0x42, 0x55, 0xe6,
	0x3b, 0x55, 0xc9, 0x3e, 0x2d, 0x64, 0x6f, 0xa7, 0x42, 0x54, 0x36, 0x5e, 0x6c, 0x76, 0x6e, 0x49,
	0x5e, 0x77, 0x2f, 0xcf, 0xd8, 0xfb, 0x08, 0x8e, 0x76, 0xf6, 0x8e, 0x67, 0xf0, 0x58, 0x8d, 0x40,
	0xed, 0xdb, 0x1e, 0xb6, 0x0b, 0x0b, 0x91, 0x2c, 0x6b, 0xf8, 0xd3, 0x82, 0xaa, 0x0c, 0xe0, 0x3b,
	0xb0, 0xf4, 0x1b, 0x3d, 0xde, 0xe1, 0x3c, 0x78, 0xd0, 0x6e, 0xbb, 0x30, 0xea, 0x1d, 0xe0, 0x5b,
	0xa8, 0x6f, 0x86, 0xe3, 0x0b, 0x8a, 0xc5, 0xad, 0xdd, 0x96, 0xb1, 0x56, 0xb2, 0x08, 0x08, 0xe5,
	0x49, 0x24, 0x4c, 0xfa, 0xd7, 0xc5, 0xf4, 0x7f, 0xe8, 0x57, 0x34, 0xa2, 0xff, 0x4e, 0x9f, 0x00,
	0x18, 0x63, 0x7c, 0x59, 0xfc, 0x5a, 0xb2, 0x7f, 0x96, 0xfb, 0x62, 0x6f, 0xdc, 0x3b, 0xc0, 0xf7,
	0xd0, 0x18, 0xb3, 0x78, 0x16, 0xde, 0x7f, 0xa0, 0x62, 0xc4, 0x58, 0x84, 0x66, 0x4f, 0x15, 0xf9,
	0x44, 0xd7, 0xee, 0x49, 0x0e, 0xd5, 0xf9, 0x84, 0x2e, 0xa2, 0xb5, 0x94, 0xd4, 0x54, 0xb8, 0x1a,
	0x88, 0x2c, 0xd5, 0xce, 0x91, 0x52, 0xd8, 0x3d, 0xce, 0xc1, 0x8a, 0xb3, 0x2d, 0xf5, 0x44, 0xc1,
	0xa9, 0x44, 0x59, 0xc8, 0xcd, 0x31, 0x4c, 0x77, 0x45, 0x4d, 0xb4, 0xbb, 0x8f, 0x70, 0xb4, 0x51,
	0x7b, 0x23, 0x96, 0x61, 0x7c, 0xbf, 0xc7, 0xdf, 0x69, 0x91, 0x3f, 0xc5, 0xc8, 0x64, 0x5d, 0x03,
	0x9a, 0x6a, 0x75, 0xb9, 0x4e, 0x8e, 0xa8, 0x02, 0x7f, 0x75, 0x79, 0x9d, 0x0d, 0x2c, 0x95, 0xaa,
	0x8b, 0xfd, 0xc9, 0x67, 0x77, 0x4f, 0x23, 0xe5, 0xf4, 0xce, 0x92, 0x9f, 0xf5, 0x8b, 0xdf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xc5, 0x21, 0xaa, 0xa1, 0xfd, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StatsClient is the client API for Stats service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatsClient interface {
	// *
	// Get program status.
	Status(ctx context.Context, in *StatsStatusRequest, opts ...grpc.CallOption) (*StatsStatus, error)
	// *
	// Add configuration for the given StatsVolume message.
	//
	// returns RpcResult
	VolumeCreate(ctx context.Context, in *StatsVolume, opts ...grpc.CallOption) (*RpcResult, error)
	// *
	// Update configuration for the given StatsVolume message.
	//
	// returns RpcResult
	VolumeUpdate(ctx context.Context, in *StatsVolume, opts ...grpc.CallOption) (*RpcResult, error)
	// *
	// Remove configuration for the given StatsVolume message.
	//
	// returns RpcResult
	VolumeDelete(ctx context.Context, in *StatsVolume, opts ...grpc.CallOption) (*RpcResult, error)
	// *
	// Return a list of configured volumes. Optionally filter using the StatsVolumeListQuery message.
	//
	// returns An StatsVolumeList message containing StatsVolume messages,
	//         if any are found matching the filter.
	VolumeList(ctx context.Context, in *StatsVolumeListQuery, opts ...grpc.CallOption) (*StatsVolumeList, error)
	// *
	// Return a list of volume metrics. Optionally filter using the StatsVolumeMetricsListQuery message.
	//
	// returns A StatsVolumeMetricsList message containing StatsVolumeMetrics messages,
	//         if any are found matching the filter.
	VolumeMetrics(ctx context.Context, in *StatsVolumeMetricsListQuery, opts ...grpc.CallOption) (*StatsVolumeMetricsList, error)
	// Config services, from common.v1.
	ConfigGetBool(ctx context.Context, in *ConfigKey, opts ...grpc.CallOption) (*ConfigGetBoolReply, error)
	ConfigUpdateBool(ctx context.Context, in *ConfigBool, opts ...grpc.CallOption) (*ConfigUpdateReply, error)
	ConfigListBool(ctx context.Context, in *ConfigListQuery, opts ...grpc.CallOption) (*ConfigBoolList, error)
	ConfigGetString(ctx context.Context, in *ConfigKey, opts ...grpc.CallOption) (*ConfigGetStringReply, error)
	ConfigUpdateString(ctx context.Context, in *ConfigString, opts ...grpc.CallOption) (*ConfigUpdateReply, error)
	ConfigListString(ctx context.Context, in *ConfigListQuery, opts ...grpc.CallOption) (*ConfigStringList, error)
}

type statsClient struct {
	cc *grpc.ClientConn
}

func NewStatsClient(cc *grpc.ClientConn) StatsClient {
	return &statsClient{cc}
}

func (c *statsClient) Status(ctx context.Context, in *StatsStatusRequest, opts ...grpc.CallOption) (*StatsStatus, error) {
	out := new(StatsStatus)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsClient) VolumeCreate(ctx context.Context, in *StatsVolume, opts ...grpc.CallOption) (*RpcResult, error) {
	out := new(RpcResult)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/VolumeCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsClient) VolumeUpdate(ctx context.Context, in *StatsVolume, opts ...grpc.CallOption) (*RpcResult, error) {
	out := new(RpcResult)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/VolumeUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsClient) VolumeDelete(ctx context.Context, in *StatsVolume, opts ...grpc.CallOption) (*RpcResult, error) {
	out := new(RpcResult)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/VolumeDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *statsClient) VolumeList(ctx context.Context, in *StatsVolumeListQuery, opts ...grpc.CallOption) (*StatsVolumeList, error) {
	out := new(StatsVolumeList)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/VolumeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

<<<<<<< HEAD
func (c *statsClient) VolumeMetrics(ctx context.Context, in *StatsVolumeMetricsListQuery, opts ...grpc.CallOption) (*StatsVolumeMetricsList, error) {
	out := new(StatsVolumeMetricsList)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/VolumeMetrics", in, out, opts...)
=======
func (c *statsClient) ConfigGetBool(ctx context.Context, in *ConfigKey, opts ...grpc.CallOption) (*ConfigGetBoolReply, error) {
	out := new(ConfigGetBoolReply)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigGetBool", in, out, opts...)
>>>>>>> master
	if err != nil {
		return nil, err
	}
	return out, nil
}

<<<<<<< HEAD
func (c *statsClient) ConfigGetBool(ctx context.Context, in *ConfigKey, opts ...grpc.CallOption) (*ConfigGetBoolReply, error) {
	out := new(ConfigGetBoolReply)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigGetBool", in, out, opts...)
=======
func (c *statsClient) ConfigUpdateBool(ctx context.Context, in *ConfigBool, opts ...grpc.CallOption) (*ConfigUpdateReply, error) {
	out := new(ConfigUpdateReply)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigUpdateBool", in, out, opts...)
>>>>>>> master
	if err != nil {
		return nil, err
	}
	return out, nil
}

<<<<<<< HEAD
func (c *statsClient) ConfigUpdateBool(ctx context.Context, in *ConfigBool, opts ...grpc.CallOption) (*ConfigUpdateReply, error) {
	out := new(ConfigUpdateReply)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigUpdateBool", in, out, opts...)
=======
func (c *statsClient) ConfigListBool(ctx context.Context, in *ConfigListQuery, opts ...grpc.CallOption) (*ConfigBoolList, error) {
	out := new(ConfigBoolList)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigListBool", in, out, opts...)
>>>>>>> master
	if err != nil {
		return nil, err
	}
	return out, nil
}

<<<<<<< HEAD
func (c *statsClient) ConfigListBool(ctx context.Context, in *ConfigListQuery, opts ...grpc.CallOption) (*ConfigBoolList, error) {
	out := new(ConfigBoolList)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigListBool", in, out, opts...)
=======
func (c *statsClient) ConfigGetString(ctx context.Context, in *ConfigKey, opts ...grpc.CallOption) (*ConfigGetStringReply, error) {
	out := new(ConfigGetStringReply)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigGetString", in, out, opts...)
>>>>>>> master
	if err != nil {
		return nil, err
	}
	return out, nil
}

<<<<<<< HEAD
func (c *statsClient) ConfigGetString(ctx context.Context, in *ConfigKey, opts ...grpc.CallOption) (*ConfigGetStringReply, error) {
	out := new(ConfigGetStringReply)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigGetString", in, out, opts...)
=======
func (c *statsClient) ConfigUpdateString(ctx context.Context, in *ConfigString, opts ...grpc.CallOption) (*ConfigUpdateReply, error) {
	out := new(ConfigUpdateReply)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigUpdateString", in, out, opts...)
>>>>>>> master
	if err != nil {
		return nil, err
	}
	return out, nil
}

<<<<<<< HEAD
func (c *statsClient) ConfigUpdateString(ctx context.Context, in *ConfigString, opts ...grpc.CallOption) (*ConfigUpdateReply, error) {
	out := new(ConfigUpdateReply)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigUpdateString", in, out, opts...)
=======
func (c *statsClient) ConfigListString(ctx context.Context, in *ConfigListQuery, opts ...grpc.CallOption) (*ConfigStringList, error) {
	out := new(ConfigStringList)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigListString", in, out, opts...)
>>>>>>> master
	if err != nil {
		return nil, err
	}
	return out, nil
}

<<<<<<< HEAD
func (c *statsClient) ConfigListString(ctx context.Context, in *ConfigListQuery, opts ...grpc.CallOption) (*ConfigStringList, error) {
	out := new(ConfigStringList)
	err := c.cc.Invoke(ctx, "/stats.v1.Stats/ConfigListString", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

=======
>>>>>>> master
// StatsServer is the server API for Stats service.
type StatsServer interface {
	// *
	// Get program status.
	Status(context.Context, *StatsStatusRequest) (*StatsStatus, error)
	// *
	// Add configuration for the given StatsVolume message.
	//
	// returns RpcResult
	VolumeCreate(context.Context, *StatsVolume) (*RpcResult, error)
	// *
	// Update configuration for the given StatsVolume message.
	//
	// returns RpcResult
	VolumeUpdate(context.Context, *StatsVolume) (*RpcResult, error)
	// *
	// Remove configuration for the given StatsVolume message.
	//
	// returns RpcResult
	VolumeDelete(context.Context, *StatsVolume) (*RpcResult, error)
	// *
	// Return a list of configured volumes. Optionally filter using the StatsVolumeListQuery message.
	//
	// returns An StatsVolumeList message containing StatsVolume messages,
	//         if any are found matching the filter.
	VolumeList(context.Context, *StatsVolumeListQuery) (*StatsVolumeList, error)
	// *
	// Return a list of volume metrics. Optionally filter using the StatsVolumeMetricsListQuery message.
	//
	// returns A StatsVolumeMetricsList message containing StatsVolumeMetrics messages,
	//         if any are found matching the filter.
	VolumeMetrics(context.Context, *StatsVolumeMetricsListQuery) (*StatsVolumeMetricsList, error)
	// Config services, from common.v1.
	ConfigGetBool(context.Context, *ConfigKey) (*ConfigGetBoolReply, error)
	ConfigUpdateBool(context.Context, *ConfigBool) (*ConfigUpdateReply, error)
	ConfigListBool(context.Context, *ConfigListQuery) (*ConfigBoolList, error)
	ConfigGetString(context.Context, *ConfigKey) (*ConfigGetStringReply, error)
	ConfigUpdateString(context.Context, *ConfigString) (*ConfigUpdateReply, error)
	ConfigListString(context.Context, *ConfigListQuery) (*ConfigStringList, error)
}

func RegisterStatsServer(s *grpc.Server, srv StatsServer) {
	s.RegisterService(&_Stats_serviceDesc, srv)
}

func _Stats_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).Status(ctx, req.(*StatsStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_VolumeCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsVolume)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).VolumeCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/VolumeCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).VolumeCreate(ctx, req.(*StatsVolume))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_VolumeUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsVolume)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).VolumeUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/VolumeUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).VolumeUpdate(ctx, req.(*StatsVolume))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_VolumeDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsVolume)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).VolumeDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/VolumeDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).VolumeDelete(ctx, req.(*StatsVolume))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_VolumeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsVolumeListQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).VolumeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/VolumeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).VolumeList(ctx, req.(*StatsVolumeListQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_VolumeMetrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsVolumeMetricsListQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).VolumeMetrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/VolumeMetrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).VolumeMetrics(ctx, req.(*StatsVolumeMetricsListQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_ConfigGetBool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).ConfigGetBool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/ConfigGetBool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).ConfigGetBool(ctx, req.(*ConfigKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_ConfigUpdateBool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigBool)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).ConfigUpdateBool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/ConfigUpdateBool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).ConfigUpdateBool(ctx, req.(*ConfigBool))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_ConfigListBool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigListQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).ConfigListBool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/ConfigListBool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).ConfigListBool(ctx, req.(*ConfigListQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_ConfigGetString_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigKey)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).ConfigGetString(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/ConfigGetString",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).ConfigGetString(ctx, req.(*ConfigKey))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_ConfigUpdateString_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigString)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).ConfigUpdateString(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/ConfigUpdateString",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).ConfigUpdateString(ctx, req.(*ConfigString))
	}
	return interceptor(ctx, in, info, handler)
}

func _Stats_ConfigListString_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigListQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatsServer).ConfigListString(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/stats.v1.Stats/ConfigListString",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatsServer).ConfigListString(ctx, req.(*ConfigListQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stats_serviceDesc = grpc.ServiceDesc{
	ServiceName: "stats.v1.Stats",
	HandlerType: (*StatsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _Stats_Status_Handler,
		},
		{
			MethodName: "VolumeCreate",
			Handler:    _Stats_VolumeCreate_Handler,
		},
		{
			MethodName: "VolumeUpdate",
			Handler:    _Stats_VolumeUpdate_Handler,
		},
		{
			MethodName: "VolumeDelete",
			Handler:    _Stats_VolumeDelete_Handler,
		},
		{
			MethodName: "VolumeList",
			Handler:    _Stats_VolumeList_Handler,
		},
		{
			MethodName: "VolumeMetrics",
			Handler:    _Stats_VolumeMetrics_Handler,
		},
		{
			MethodName: "ConfigGetBool",
			Handler:    _Stats_ConfigGetBool_Handler,
		},
		{
			MethodName: "ConfigUpdateBool",
			Handler:    _Stats_ConfigUpdateBool_Handler,
		},
		{
			MethodName: "ConfigListBool",
			Handler:    _Stats_ConfigListBool_Handler,
		},
		{
			MethodName: "ConfigGetString",
			Handler:    _Stats_ConfigGetString_Handler,
		},
		{
			MethodName: "ConfigUpdateString",
			Handler:    _Stats_ConfigUpdateString_Handler,
		},
		{
			MethodName: "ConfigListString",
			Handler:    _Stats_ConfigListString_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stats.proto",
}
