// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

/*
Package storageos_rpc is a generated protocol buffer package.

It is generated from these files:
	common.proto

It has these top-level messages:
	RpcResult
	DataplaneCommonConfig
*/
package storageos_rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RpcResult struct {
	// Whether or not the operation was successful.
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	// If the operation was not successful, this is an explanatory message.
	Reason string `protobuf:"bytes,2,opt,name=reason" json:"reason,omitempty"`
}

func (m *RpcResult) Reset()                    { *m = RpcResult{} }
func (m *RpcResult) String() string            { return proto.CompactTextString(m) }
func (*RpcResult) ProtoMessage()               {}
func (*RpcResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RpcResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *RpcResult) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type DataplaneCommonConfig struct {
	// Item labels.
	Labels map[string]string `protobuf:"bytes,1,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Item status.
	Status map[string]string `protobuf:"bytes,2,rep,name=status" json:"status,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Human-readable info.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// UUID. Not currently used.
	Uuid string `protobuf:"bytes,4,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *DataplaneCommonConfig) Reset()                    { *m = DataplaneCommonConfig{} }
func (m *DataplaneCommonConfig) String() string            { return proto.CompactTextString(m) }
func (*DataplaneCommonConfig) ProtoMessage()               {}
func (*DataplaneCommonConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DataplaneCommonConfig) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *DataplaneCommonConfig) GetStatus() map[string]string {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *DataplaneCommonConfig) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *DataplaneCommonConfig) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func init() {
	proto.RegisterType((*RpcResult)(nil), "storageos_rpc.RpcResult")
	proto.RegisterType((*DataplaneCommonConfig)(nil), "storageos_rpc.DataplaneCommonConfig")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0xc1, 0x4a, 0xc4, 0x30,
	0x10, 0x86, 0x69, 0xbb, 0x56, 0x3b, 0x55, 0x90, 0xa0, 0x12, 0x3c, 0x95, 0x3d, 0xf5, 0x54, 0x44,
	0x2f, 0x2a, 0x78, 0x5a, 0x05, 0x0f, 0x9e, 0xe2, 0x03, 0x48, 0x36, 0x1b, 0x97, 0x62, 0x36, 0x13,
	0x32, 0x89, 0xb0, 0x4f, 0xea, 0xeb, 0x48, 0xb3, 0x15, 0x2a, 0xec, 0x65, 0x6f, 0xf3, 0x27, 0x7c,
	0xdf, 0x4c, 0x26, 0x70, 0xaa, 0x70, 0xb3, 0x41, 0xdb, 0x39, 0x8f, 0x01, 0xd9, 0x19, 0x05, 0xf4,
	0x72, 0xad, 0x91, 0x3e, 0xbc, 0x53, 0xf3, 0x27, 0xa8, 0x84, 0x53, 0x42, 0x53, 0x34, 0x81, 0x71,
	0x38, 0xa6, 0xa8, 0x94, 0x26, 0xe2, 0x59, 0x93, 0xb5, 0x27, 0xe2, 0x2f, 0xb2, 0x2b, 0x28, 0xbd,
	0x96, 0x84, 0x96, 0xe7, 0x4d, 0xd6, 0x56, 0x62, 0x4c, 0xf3, 0x9f, 0x1c, 0x2e, 0x9f, 0x65, 0x90,
	0xce, 0x48, 0xab, 0x17, 0xa9, 0xcf, 0x02, 0xed, 0x67, 0xbf, 0x66, 0xaf, 0x50, 0x1a, 0xb9, 0xd4,
	0x66, 0x50, 0x15, 0x6d, 0x7d, 0x7b, 0xd3, 0xfd, 0x6b, 0xdc, 0xed, 0xa5, 0xba, 0xb7, 0x84, 0xbc,
	0xd8, 0xe0, 0xb7, 0x62, 0xe4, 0x07, 0x13, 0x05, 0x19, 0x22, 0xf1, 0xfc, 0x00, 0xd3, 0x7b, 0x42,
	0x46, 0xd3, 0x8e, 0x67, 0x0d, 0xd4, 0x2b, 0x4d, 0xca, 0xf7, 0x2e, 0xf4, 0x68, 0x79, 0x91, 0x9e,
	0x32, 0x3d, 0x62, 0x0c, 0x66, 0x31, 0xf6, 0x2b, 0x3e, 0x4b, 0x57, 0xa9, 0xbe, 0x7e, 0x80, 0x7a,
	0x32, 0x16, 0x3b, 0x87, 0xe2, 0x4b, 0x6f, 0xd3, 0x82, 0x2a, 0x31, 0x94, 0xec, 0x02, 0x8e, 0xbe,
	0xa5, 0x89, 0x7a, 0xdc, 0xcd, 0x2e, 0x3c, 0xe6, 0xf7, 0xd9, 0x80, 0x4e, 0xe6, 0x38, 0x04, 0x5d,
	0x96, 0xe9, 0xbb, 0xee, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x7d, 0xcc, 0x8c, 0x54, 0xbe, 0x01,
	0x00, 0x00,
}
